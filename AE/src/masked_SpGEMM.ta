def main() {
    #IndexLabel Declarations
    IndexLabel [a] = [?];
    IndexLabel [b] = [?];
    IndexLabel [c] = [?];
    
    #Tensor Declarations
    Tensor<double> A([a, b], {CSR});	 
    Tensor<double> B([b, c], {CSR});
    Tensor<double> C([a, c], {CSR});
    
    #Tensor Readfile Operation
    A[a, b] = comet_read(0);
    B[b, c] = comet_read(0);
    
    #Tensor Contraction
    var t0 = getTime();
    C[a, c]<B, push> = A[a, b] * B[b, c]; # B is also the mask, using push-based method.
                                          # valid options: {push, pull, auto}
	var t1 = getTime();
	printElapsedTime(t0, t1);

    var ret = SUM(C[a, c]);
    print(ret);
}
