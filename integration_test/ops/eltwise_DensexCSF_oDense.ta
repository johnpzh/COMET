# RUN: comet-opt --convert-ta-to-it --convert-to-loops %s &> eltwise_DensexCSF_oDense.mlir
# RUN: mlir-opt --convert-scf-to-std --convert-std-to-llvm eltwise_DensexCSF_oDense.mlir &> eltwise_DensexCSF_oDense.llvm
# RUN: export SPARSE_FILE_NAME0=%comet_integration_test_data_dir/test_rank3.tns
# RUN: mlir-cpu-runner eltwise_DensexCSF_oDense.llvm -O3 -e main -entry-point-result=void -shared-libs=%mlir_utility_library_dir/libmlir_runner_utils%shlibext,%comet_utility_library_dir/libcomet_runner_utils%shlibext | FileCheck %s

def main() {
	#IndexLabel Declarations
	IndexLabel [a] = [?];
	IndexLabel [b] = [?];            
	IndexLabel [c] = [?];            

	#Tensor Declarations	  
	Tensor<double> B([a, b, c], {CSF});
	Tensor<double> A([a, b, c], {Dense});	
	Tensor<double> C([a, b, c], {Dense});

    #Tensor Readfile Operation
    B[a, b, c] = read_from_file(0);

	#Tensor Fill Operation
	A[a, b, c] = 2.7;

	#Initialize output dense tensor
	C[a, b, c] = 0.0;

	#Tensor Contraction
	C[a, b, c] = A[a, b, c] .* B[a, b, c];
	
	print(C);
}

# Print the result for verification.
# CHECK: data = 
# CHECK-NEXT: 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5.697,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8.1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,