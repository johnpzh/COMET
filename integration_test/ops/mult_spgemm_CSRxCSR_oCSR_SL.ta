# Sparse matrix sparse matrix multiplication
# RUN: comet-opt --opt-comp-workspace --convert-ta-to-it --convert-to-loops --sim-analysis %s &> mult_spgemm_CSRxCSR_oCSR_SL.mlir


def main() {
    #IndexLabel Declarations
    IndexLabel [a] = [256];  # static sizes for sim-analysis
    IndexLabel [b] = [256];
    IndexLabel [c] = [256];
    
    #Tensor Declarations
    Tensor<double> A([a, b], {CSR});	 
    Tensor<double> B([b, c], {CSR});
    Tensor<double> C([a, c], {CSR});
    
    #Tensor Readfile Operation
    A[a, b] = read_from_file(0);
    B[b, c] = read_from_file(1);
    
    #Tensor Contraction
    C[a, c] = A[a, b] * B[b, c];
    print(C);
}

#CHECK: problem:
#CHECK:  shape:
#CHECK:    name: "tc"
#CHECK:    dimensions: [ i, j, k,  ]
#CHECK:    data-spaces:
#CHECK:    - name: A
#CHECK:      projection:
#CHECK:        - - [i]
#CHECK:        - - [j]
#CHECK:    - name: B
#CHECK:      projection:
#CHECK:        - - [j]
#CHECK:        - - [k]
#CHECK:    - name: C
#CHECK:      projection:
#CHECK:        - - [i]
#CHECK:        - - [k]
#CHECK:      read-write: True
#CHECK:  instance: {i: 256, j: 256, k: 256, }
#CHECK:    densities:
#CHECK:      A:
#CHECK:        distribution: fixed-structured
#CHECK:        density: 0.25
#CHECK:      B:
#CHECK:        distribution: fixed-structured
#CHECK:        density: 0.5
