# RUN: comet-opt --opt-comp-workspace --convert-ta-to-it --convert-to-loops %s &> compound_spTranspose_spgemm_CSRxCSR.mlir
# RUN: mlir-opt --convert-scf-to-std --convert-std-to-llvm compound_spTranspose_spgemm_CSRxCSR.mlir &> compound_spTranspose_spgemm_CSRxCSR.llvm
# RUN: export SPARSE_FILE_NAME0=%comet_integration_test_data_dir/test_rank2.mtx
# RUN: export SORT_TYPE=SEQ_QSORT
# RUN: mlir-cpu-runner compound_spTranspose_spgemm_CSRxCSR.llvm -O3 -e main -entry-point-result=void -shared-libs=%mlir_utility_library_dir/libmlir_runner_utils%shlibext,%comet_utility_library_dir/libcomet_runner_utils%shlibext | FileCheck %s

## GOOD TEST (merge request)

def main() {
	#IndexLabel Declarations
	IndexLabel [i] = [?];
	IndexLabel [j] = [?];      
    IndexLabel [k] = [?];     

	#Tensor Declarations
	Tensor<double> A([i, j], CSR);	  
    Tensor<double> B([i, k], CSR);
    Tensor<double> C([j, k], CSR);

    #Tensor Readfile Operation      
    A[i, j] = read_from_file(0);
    B[i, k] = read_from_file(0);

	#Tensor Transpose
	C[j, k] = transpose(A[i, j],{j,i}) * B[i, k];
	print(C);
}

# Print the result for verification.
# CHECK: data = 
# CHECK-NEXT: 5,
# CHECK-NEXT: data = 
# CHECK-NEXT: 0,
# CHECK-NEXT: data = 
# CHECK-NEXT: 0,2,4,5,7,9,
# CHECK-NEXT: data = 
# CHECK-NEXT: 0,3,1,4,2,0,3,1,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
# CHECK-NEXT: data = 
# CHECK-NEXT: 17.81,17.8,31.04,31,9,17.8,17.96,31,31.25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,