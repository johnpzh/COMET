# RUN: comet-opt --convert-ta-to-it --convert-to-loops %s &> compound_spmm_spTranspose_DensexCSR.mlir
# RUN: mlir-opt --convert-scf-to-std --convert-std-to-llvm compound_spmm_spTranspose_DensexCSR.mlir &> compound_spmm_spTranspose_DensexCSR.llvm
# RUN: export SPARSE_FILE_NAME0=%comet_integration_test_data_dir/test_rank2.mtx
# RUN: export SORT_TYPE=SEQ_QSORT
# RUN: mlir-cpu-runner compound_spmm_spTranspose_DensexCSR.llvm -O3 -e main -entry-point-result=void -shared-libs=%mlir_utility_library_dir/libmlir_runner_utils%shlibext,%comet_utility_library_dir/libcomet_runner_utils%shlibext | FileCheck %s

## GOOD TEST (merge request)
# SPMM: output is dense
# SpM .* dM = SpM

# TBD: add spM * spM = SpM test case with opt-workspace

def main() {
	#IndexLabel Declarations
	IndexLabel [i] = [?];
	IndexLabel [j] = [?];      
    IndexLabel [k] = [5];     

	#Tensor Declarations
	Tensor<double> B([i, j], CSR);
    Tensor<double> A([k, j], Dense);	  
    Tensor<double> C([k, i], Dense);

    #Tensor Readfile Operation      
    B[i, j] = read_from_file(0);
    A[k, j] = 2.3;
    C[k, i] = 0.0;

	#Tensor Transpose
	C[k, i] =  A[k, j] * transpose(B[i, j],{j,i});
	print(C);
}
# Print the result for verification.
# CHECK: data =
# CHECK-NEXT: 5.52,10.35,6.9,18.63,23.46,5.52,10.35,6.9,18.63,23.46,5.52,10.35,6.9,18.63,23.46,5.52,10.35,6.9,18.63,23.46,5.52,10.35,6.9,18.63,23.46,