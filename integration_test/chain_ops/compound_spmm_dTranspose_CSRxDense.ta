# RUN: comet-opt --convert-ta-to-it --convert-to-loops %s &> compound_spmm_dTranspose_CSRxDense.mlir
# RUN: mlir-opt --convert-linalg-to-loops --convert-scf-to-std --convert-std-to-llvm compound_spmm_dTranspose_CSRxDense.mlir &> compound_spmm_dTranspose_CSRxDense.llvm
# RUN: export SPARSE_FILE_NAME0=%comet_integration_test_data_dir/test_rank2.mtx
# RUN: export SORT_TYPE=SEQ_QSORT
# RUN: mlir-cpu-runner compound_spmm_dTranspose_CSRxDense.llvm -O3 -e main -entry-point-result=void -shared-libs=%mlir_utility_library_dir/libmlir_runner_utils%shlibext,%comet_utility_library_dir/libcomet_runner_utils%shlibext | FileCheck %s

def main() {
	#IndexLabel Declarations
	IndexLabel [i] = [5];
	IndexLabel [j] = [?];      
    IndexLabel [k] = [?];     

	#Tensor Declarations
    Tensor<double> A([k, j], CSR);	  
    Tensor<double> B([i, j], Dense);
    Tensor<double> C([k, i], Dense);

    #Tensor Readfile Operation      
    A[k, j] = read_from_file(0);
    B[i, j] = 3.2;
    C[k, i] = 0.0;

	#Tensor Transpose
	C[k, i] = A[k, j] * transpose(B[i, j],{j,i});
	print(C);
}
# Print the result for verification.
# CHECK: data =
# CHECK-NEXT: 7.68,7.68,7.68,7.68,7.68,14.4,14.4,14.4,14.4,14.4,9.6,9.6,9.6,9.6,9.6,25.92,25.92,25.92,25.92,25.92,32.64,32.64,32.64,32.64,32.64,